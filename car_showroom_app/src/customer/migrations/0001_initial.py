# Generated by Django 3.2.8 on 2021-10-12 10:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import src.customer.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('supplier', '0002_alter_supplier_car_car'),
        ('car_showroom', '0008_alter_car_showroom_sortquery'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=14)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99999)])),
                ('sample', models.JSONField(blank=True, default=src.customer.models.jsonfield_default_value)),
                ('country', django_countries.fields.CountryField(blank=True, default=None, max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.car', to_field='vin')),
                ('car_showroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car_showroom.car_showroom')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='cars',
            field=models.ManyToManyField(through='customer.Purchase', to='supplier.Car'),
        ),
    ]
