# Generated by Django 3.2.8 on 2021-11-04 08:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import src.car_showroom.models
import src.tools.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('supplier', '0001_initial'),
        ('car_showroom', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(auto_now=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('_MALE', 'Male'), ('_FEMALE', 'Female')], default='MALE', max_length=50)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=40, validators=[django.core.validators.RegexValidator(regex='^\\+375(17|29|33|44)[0-9]{3}[0-9]{2}[0-9]{2}$')])),
                ('balance', src.tools.fields.DecimalRangeField(decimal_places=2, max_digits=10, null=True)),
                ('sample', models.JSONField(blank=True, default=src.car_showroom.models.jsonfield_default_value)),
            ],
            options={
                'ordering': ('name', 'balance'),
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(auto_now=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('country', django_countries.fields.CountryField(blank=True, default=None, max_length=2, null=True)),
                ('city', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('street', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('houseNum', models.PositiveIntegerField(blank=True, default=None, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(auto_now=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('discount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cars', related_query_name='car', to='supplier.car', to_field='vin')),
                ('car_showroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carShowrooms', related_query_name='carShowroom', to='car_showroom.carshowroom')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='suppliers', related_query_name='supplier', to='customer.customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='cars',
            field=models.ManyToManyField(through='customer.Purchase', to='supplier.Car'),
        ),
        migrations.AddField(
            model_name='customer',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='customer.location'),
        ),
    ]
